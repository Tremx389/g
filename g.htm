<!DOCTYPE html>
<html>
	<head>

		<script src="http://code.jquery.com/jquery-latest.min.js" type="text/javascript">
		</script>

		<script src="autosize.js" type="text/javascript">
		</script>

		<link rel="stylesheet" type="text/css" href="g.css">

		<script>
/*
*****Developer : Szabó Bendegúz Krisztián (tremx.389@gmail.com, szabó@bendeg.uz)
*****Date : 21/02/2013
*****All code (c)2012-2013 Onessin Inc. all rights reserved
*/
			Array.prototype.makeLand = function(s, m, ms)
				{
					this.length = 0;
					for (var i = 0;i <= m-1; i++)
						{
							var angle = Math.PI / (m/2) * i;
							var random = (s/$.graphics) + Math.random() * (ms/$.graphics);
							this.push({x: Math.sin(angle) * random, y: Math.cos(angle) * random});
						}
				};

			Array.prototype.makeHilly = function(maxDegree, minLength, cutPower)
				{
					while (finished != this.length)
						{
							var finished = 0;
							for (var j1 = 0; j1 < this.length; j1 = j1 + 2)
								{
									if (j1+2 == this.length)
										{
											j2 = this.length-1;
											j3 = 0;
										}
									else if (j1+1 == this.length)
										{
											j2 = 0;
											j3 = 1;
										}
									else
										{
											j2 = j1+1;
											j3 = j1+2;
										}	
													
									var x1 = this[j2].x - this[j1].x;
									var y1 = this[j2].y - this[j1].y;
									var x2 = this[j2].x - this[j3].x;
									var y2 = this[j2].y - this[j3].y;
													
									var line1 = Math.sqrt(Math.pow(x1,2) + Math.pow(y1,2));
									var line2 = Math.sqrt(Math.pow(x2,2) + Math.pow(y2,2));
													
									if ((this.getDegree(j1, j2, j3) <= maxDegree) && ((line1 < line2 ? line1 : line2) >= minLength))
										{
											this[j2] = {x: this[j3].x + (x2 * cutPower), y: this[j3].y + (y2 * cutPower)};
											this.splice(j2,0,{x: (this[j1].x + (x1 * cutPower)), y: (this[j1].y + (y1 * cutPower))});
										}
									else
										{
											j1--;
											finished++;
										}
								}
						}
				};

			Array.prototype.getDegree = function(j1, j2, j3)
				{			
					var a = Math.sqrt(Math.pow(Math.abs(this[j1].x - this[j2].x),2) + Math.pow(Math.abs(this[j1].y - this[j2].y),2));
					var b = Math.sqrt(Math.pow(Math.abs(this[j2].x - this[j3].x),2) + Math.pow(Math.abs(this[j2].y - this[j3].y),2));	
							
					var rad = (Math.pow(a,2) + Math.pow(b,2) - Math.pow(Math.sqrt(Math.pow(Math.abs(this[j1].x - this[j3].x),2) + Math.pow(Math.abs(this[j1].y - this[j3].y),2)),2)) / (2*a*b);
							
					return Math.round(Math.acos((rad > 1) || (rad < -1) ? Math.round(rad) : rad) * (180/Math.PI));
				};

			Array.prototype.getImage = function()
				{			
					var x = this.map(function(a) {return a.x;});
					var y = this.map(function(a) {return a.y;});
					
					var minX = Math.min.apply(null, x);
					var maxX = Math.max.apply(null, x);
					var minY = Math.min.apply(null, y);
					var maxY = Math.max.apply(null, y);
						
					var landSize = {x: (maxX-minX),y: (maxY-minY)};
								
								
								
					var imgCanvas = document.createElement('canvas');
					var imgCtx = imgCanvas.getContext('2d');
					imgCanvas.width = landSize.x;
					imgCanvas.height = landSize.y;
					
					
					imgCtx.beginPath();
						imgCtx.moveTo(x[0]-minX, y[0]-minY);
						for (var i = 1; i < this.length; i++)
							{
								imgCtx.lineTo(x[i]-minX, y[i]-minY);			
							}
						imgCtx.lineTo(x[0]-minX, y[0]-minY);
						
						imgCtx.fill();
				//	document.getElementById("write").innerHTML = (minX + (landSize.x/2)
				
					var outIMG = new Image();
					outIMG.src = imgCanvas.toDataURL();
					
					return {img: outIMG, size: landSize, x: minX + (landSize.x/2), y:  minY + (landSize.y/2)}; 			//(minX + (landSize.x/2))
				};
				
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////	
////////////////////////////////////////////////////////////////////////////////	















			window.onload = function()
				{
					window.canvas = document.getElementsByTagName("canvas")[0];
					window.ctx = document.getElementsByTagName("canvas")[0].getContext("2d");
					window.land = new Array();
					window.landIMG;
					
					window.$ 	=  	{
										fps: 80,
										ratio: 0.7,
										screen: 1000,
										margin: 10,
										graphics: 1,
										speed: 0,
									}
								
					window.pos	=	{
										x: $.screen / 2 / $.graphics,
										y: $.screen*$.ratio / 2 / $.graphics,
									}
									
					window.char = 	{
										x: 0,
										y: 0,
									}
					
					//[]!!!
					startGame();
				};
				
				
				
				
			function startGame()
				{
					autoWindow();
					window.onresize = function(){autoWindow()};
					
					land.makeLand(40, 3, 800);
					land.makeHilly(160, 1, 0.7);
					landIMG	= land.getImage();
					
					window.playIV = setInterval("play()", 35 )//(1000 / $.fps))
				};
			function endGame()
				{
					clearInterval("playIV");
					window.onresize = null;
				};
				
				


			function play()
				{
					canvas.width = canvas.width;
					$.speed+=1;
					
					drawLand();
				};
			function drawLand()
				{
					ctx.save();
						ctx.translate((pos.x - landIMG.x), (pos.x - landIMG.x));
						ctx.rotate($.speed/(180/Math.PI));
						ctx.translate(-(landIMG.size.x/2 - landIMG.x), -(landIMG.size.y/2 - landIMG.y)); //-(pos.x - landIMG.x)   -((landSize.x/2)-landMiddle.x+10)
						ctx.drawImage(landIMG.img, 0, 0);
					ctx.restore();
					
				};

		</script>
	</head>
	<body>
		<canvas width="1000px" height="800px" onclick="endGame(); startGame()">
		</canvas>
		<img id="haha" />
		<div id="write" style="font-family: arial ; font-size: 9px; color: white; position: absolute; bottom: -1px; right: 6px;">
			Onassin Inc. v1.0 &copy
		</div>
	</body>
</html>